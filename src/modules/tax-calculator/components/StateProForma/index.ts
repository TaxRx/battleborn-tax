import { caConfig } from './ca';
import { akConfig } from './ak';
import { azConfig } from './az';
import { ctConfig } from './ct';
import { nyConfig } from './ny';
import { txConfig } from './tx';
import { ilConfig } from './il';
import { paConfig } from './pa';
import { ohConfig } from './oh';
import { gaConfig } from './ga';
import { vaConfig } from './va';
import { coConfig } from './co';
import { ncConfig } from './nc';
import { mdConfig } from './md';
import { maConfig } from './ma';
import { miConfig } from './mi';
import { njConfig } from './nj';
import { flConfig } from './fl';
import { waConfig } from './wa';
import { orConfig } from './or';
import { laConfig } from './la';
import { kyConfig } from './ky';
import { arConfig } from './ar';
import { msConfig } from './ms';
import { nmConfig } from './nm';
import { okConfig } from './ok';
import { utConfig } from './ut';
import { idConfig } from './id';
import { meConfig } from './me';
import { vtConfig } from './vt';
import { riConfig } from './ri';
import { deConfig } from './de';
import { hiConfig } from './hi';
import { nvConfig } from './nv';
import { nhConfig } from './nh';

export interface StateConfig {
  code: string;
  name: string;
  formName: string;
  forms: Record<string, { name: string; method: string; lines: any[] }>;
  hasAlternativeMethod: boolean;
  // Additional metadata for validation rules
  validationRules?: any[];
  alternativeValidationRules?: any[];
  creditRate?: number;
  creditType?: string;
  formReference?: string;
  notes?: string[];
}

export const STATE_CONFIGS: Record<string, StateConfig> = {
  CA: {
    code: 'CA',
    name: 'California',
    formName: 'Form 3523',
    forms: caConfig.forms,
    hasAlternativeMethod: true,
    validationRules: caConfig.validationRules,
    alternativeValidationRules: caConfig.alternativeValidationRules,
    creditRate: caConfig.creditRate,
    creditType: caConfig.creditType,
    formReference: caConfig.formReference,
    notes: caConfig.notes,
  },
  AK: {
    code: 'AK',
    name: 'Alaska',
    formName: 'Form 6390',
    forms: akConfig.forms,
    hasAlternativeMethod: false,
    validationRules: akConfig.validationRules,
    alternativeValidationRules: akConfig.alternativeValidationRules,
    creditRate: akConfig.creditRate,
    creditType: akConfig.creditType,
    formReference: akConfig.formReference,
    notes: akConfig.notes,
  },
  AZ: {
    code: 'AZ',
    name: 'Arizona',
    formName: 'Form 308',
    forms: azConfig.forms,
    hasAlternativeMethod: true,
    validationRules: azConfig.validationRules,
    alternativeValidationRules: azConfig.alternativeValidationRules,
    creditRate: azConfig.creditRate,
    creditType: azConfig.creditType,
    formReference: azConfig.formReference,
    notes: azConfig.notes,
  },
  CT: {
    code: 'CT',
    name: 'Connecticut',
    formName: 'Form 1120 RDC',
    forms: ctConfig.forms,
    hasAlternativeMethod: true,
    validationRules: ctConfig.validationRules,
    alternativeValidationRules: ctConfig.alternativeValidationRules,
    creditRate: ctConfig.creditRate,
    creditType: ctConfig.creditType,
    formReference: ctConfig.formReference,
    notes: ctConfig.notes,
  },
  NY: {
    code: 'NY',
    name: 'New York',
    formName: 'Form CT-3',
    forms: nyConfig.forms,
    hasAlternativeMethod: true,
    validationRules: nyConfig.validationRules,
    alternativeValidationRules: nyConfig.alternativeValidationRules,
    creditRate: nyConfig.creditRate,
    creditType: nyConfig.creditType,
    formReference: nyConfig.formReference,
    notes: nyConfig.notes,
  },
  TX: {
    code: 'TX',
    name: 'Texas',
    formName: 'Form 05-163',
    forms: txConfig.forms,
    hasAlternativeMethod: false,
    validationRules: txConfig.validationRules,
    alternativeValidationRules: txConfig.alternativeValidationRules,
    creditRate: txConfig.creditRate,
    creditType: txConfig.creditType,
    formReference: txConfig.formReference,
    notes: txConfig.notes,
  },
  IL: {
    code: 'IL',
    name: 'Illinois',
    formName: 'Form IL-1120',
    forms: ilConfig.forms,
    hasAlternativeMethod: true,
    validationRules: ilConfig.validationRules,
    alternativeValidationRules: ilConfig.alternativeValidationRules,
    creditRate: ilConfig.creditRate,
    creditType: ilConfig.creditType,
    formReference: ilConfig.formReference,
    notes: ilConfig.notes,
  },
  PA: {
    code: 'PA',
    name: 'Pennsylvania',
    formName: 'Form RCT-101',
    forms: paConfig.forms,
    hasAlternativeMethod: false,
    validationRules: paConfig.validationRules,
    alternativeValidationRules: paConfig.alternativeValidationRules,
    creditRate: paConfig.creditRate,
    creditType: paConfig.creditType,
    formReference: paConfig.formReference,
    notes: paConfig.notes,
  },
  OH: {
    code: 'OH',
    name: 'Ohio',
    formName: 'Form IT 1140',
    forms: ohConfig.forms,
    hasAlternativeMethod: false,
    validationRules: ohConfig.validationRules,
    alternativeValidationRules: ohConfig.alternativeValidationRules,
    creditRate: ohConfig.creditRate,
    creditType: ohConfig.creditType,
    formReference: ohConfig.formReference,
    notes: ohConfig.notes,
  },
  GA: {
    code: 'GA',
    name: 'Georgia',
    formName: 'Form IT-RD',
    forms: gaConfig.forms,
    hasAlternativeMethod: false,
    validationRules: gaConfig.validationRules,
    alternativeValidationRules: gaConfig.alternativeValidationRules,
    creditRate: gaConfig.creditRate,
    creditType: gaConfig.creditType,
    formReference: gaConfig.formReference,
    notes: gaConfig.notes,
  },
  VA: {
    code: 'VA',
    name: 'Virginia',
    formName: 'Form 500',
    forms: vaConfig.forms,
    hasAlternativeMethod: false,
    validationRules: vaConfig.validationRules,
    alternativeValidationRules: vaConfig.alternativeValidationRules,
    creditRate: vaConfig.creditRate,
    creditType: vaConfig.creditType,
    formReference: vaConfig.formReference,
    notes: vaConfig.notes,
  },
  CO: {
    code: 'CO',
    name: 'Colorado',
    formName: 'Form DR 0097',
    forms: coConfig.forms,
    hasAlternativeMethod: false,
    validationRules: coConfig.validationRules,
    alternativeValidationRules: coConfig.alternativeValidationRules,
    creditRate: coConfig.creditRate,
    creditType: coConfig.creditType,
    formReference: coConfig.formReference,
    notes: coConfig.notes,
  },
  NC: {
    code: 'NC',
    name: 'North Carolina',
    formName: 'Form CD-401',
    forms: ncConfig.forms,
    hasAlternativeMethod: false,
    validationRules: ncConfig.validationRules,
    alternativeValidationRules: ncConfig.alternativeValidationRules,
    creditRate: ncConfig.creditRate,
    creditType: ncConfig.creditType,
    formReference: ncConfig.formReference,
    notes: ncConfig.notes,
  },
  MD: {
    code: 'MD',
    name: 'Maryland',
    formName: 'Form 500CR',
    forms: mdConfig.forms,
    hasAlternativeMethod: false,
    validationRules: mdConfig.validationRules,
    alternativeValidationRules: mdConfig.alternativeValidationRules,
    creditRate: mdConfig.creditRate,
    creditType: mdConfig.creditType,
    formReference: mdConfig.formReference,
    notes: mdConfig.notes,
  },
  MA: {
    code: 'MA',
    name: 'Massachusetts',
    formName: 'Form 355M',
    forms: maConfig.forms,
    hasAlternativeMethod: false,
    validationRules: maConfig.validationRules,
    alternativeValidationRules: maConfig.alternativeValidationRules,
    creditRate: maConfig.creditRate,
    creditType: maConfig.creditType,
    formReference: maConfig.formReference,
    notes: maConfig.notes,
  },
  MI: {
    code: 'MI',
    name: 'Michigan',
    formName: 'Form 4300',
    forms: miConfig.forms,
    hasAlternativeMethod: false,
    validationRules: miConfig.validationRules,
    alternativeValidationRules: miConfig.alternativeValidationRules,
    creditRate: miConfig.creditRate,
    creditType: miConfig.creditType,
    formReference: miConfig.formReference,
    notes: miConfig.notes,
  },
  NJ: {
    code: 'NJ',
    name: 'New Jersey',
    formName: 'Form CBT-100',
    forms: njConfig.forms,
    hasAlternativeMethod: false,
    validationRules: njConfig.validationRules,
    alternativeValidationRules: njConfig.alternativeValidationRules,
    creditRate: njConfig.creditRate,
    creditType: njConfig.creditType,
    formReference: njConfig.formReference,
    notes: njConfig.notes,
  },
  FL: {
    code: 'FL',
    name: 'Florida',
    formName: 'Form F-1120',
    forms: flConfig.forms,
    hasAlternativeMethod: false,
    validationRules: flConfig.validationRules,
    alternativeValidationRules: flConfig.alternativeValidationRules,
    creditRate: flConfig.creditRate,
    creditType: flConfig.creditType,
    formReference: flConfig.formReference,
    notes: flConfig.notes,
  },
  WA: {
    code: 'WA',
    name: 'Washington',
    formName: 'Form 40',
    forms: waConfig.forms,
    hasAlternativeMethod: false,
    validationRules: waConfig.validationRules,
    alternativeValidationRules: waConfig.alternativeValidationRules,
    creditRate: waConfig.creditRate,
    creditType: waConfig.creditType,
    formReference: waConfig.formReference,
    notes: waConfig.notes,
  },
  OR: {
    code: 'OR',
    name: 'Oregon',
    formName: 'Form 20',
    forms: orConfig.forms,
    hasAlternativeMethod: false,
    validationRules: orConfig.validationRules,
    alternativeValidationRules: orConfig.alternativeValidationRules,
    creditRate: orConfig.creditRate,
    creditType: orConfig.creditType,
    formReference: orConfig.formReference,
    notes: orConfig.notes,
  },
  LA: {
    code: 'LA',
    name: 'Louisiana',
    formName: 'Form CIFT-620',
    forms: laConfig.forms,
    hasAlternativeMethod: false,
    validationRules: laConfig.validationRules,
    alternativeValidationRules: laConfig.alternativeValidationRules,
    creditRate: laConfig.creditRate,
    creditType: laConfig.creditType,
    formReference: laConfig.formReference,
    notes: laConfig.notes,
  },
  KY: {
    code: 'KY',
    name: 'Kentucky',
    formName: 'Form 720',
    forms: kyConfig.forms,
    hasAlternativeMethod: false,
    validationRules: kyConfig.validationRules,
    alternativeValidationRules: kyConfig.alternativeValidationRules,
    creditRate: kyConfig.creditRate,
    creditType: kyConfig.creditType,
    formReference: kyConfig.formReference,
    notes: kyConfig.notes,
  },
  AR: {
    code: 'AR',
    name: 'Arkansas',
    formName: 'Form AR1000F',
    forms: arConfig.forms,
    hasAlternativeMethod: false,
    validationRules: arConfig.validationRules,
    alternativeValidationRules: arConfig.alternativeValidationRules,
    creditRate: arConfig.creditRate,
    creditType: arConfig.creditType,
    formReference: arConfig.formReference,
    notes: arConfig.notes,
  },
  MS: {
    code: 'MS',
    name: 'Mississippi',
    formName: 'Form 83-105',
    forms: msConfig.forms,
    hasAlternativeMethod: false,
    validationRules: msConfig.validationRules,
    alternativeValidationRules: msConfig.alternativeValidationRules,
    creditRate: msConfig.creditRate,
    creditType: msConfig.creditType,
    formReference: msConfig.formReference,
    notes: msConfig.notes,
  },
  NM: {
    code: 'NM',
    name: 'New Mexico',
    formName: 'Form RPD-41357',
    forms: nmConfig.forms,
    hasAlternativeMethod: false,
    validationRules: nmConfig.validationRules,
    alternativeValidationRules: nmConfig.alternativeValidationRules,
    creditRate: nmConfig.creditRate,
    creditType: nmConfig.creditType,
    formReference: nmConfig.formReference,
    notes: nmConfig.notes,
  },
  OK: {
    code: 'OK',
    name: 'Oklahoma',
    formName: 'Form 511',
    forms: okConfig.forms,
    hasAlternativeMethod: false,
    validationRules: okConfig.validationRules,
    alternativeValidationRules: okConfig.alternativeValidationRules,
    creditRate: okConfig.creditRate,
    creditType: okConfig.creditType,
    formReference: okConfig.formReference,
    notes: okConfig.notes,
  },
  UT: {
    code: 'UT',
    name: 'Utah',
    formName: 'Form TC-40S',
    forms: utConfig.forms,
    hasAlternativeMethod: false,
    validationRules: utConfig.validationRules,
    alternativeValidationRules: utConfig.alternativeValidationRules,
    creditRate: utConfig.creditRate,
    creditType: utConfig.creditType,
    formReference: utConfig.formReference,
    notes: utConfig.notes,
  },
  ID: {
    code: 'ID',
    name: 'Idaho',
    formName: 'Form 41',
    forms: idConfig.forms,
    hasAlternativeMethod: false,
    validationRules: idConfig.validationRules,
    alternativeValidationRules: idConfig.alternativeValidationRules,
    creditRate: idConfig.creditRate,
    creditType: idConfig.creditType,
    formReference: idConfig.formReference,
    notes: idConfig.notes,
  },
  ME: {
    code: 'ME',
    name: 'Maine',
    formName: 'Form 1120ME',
    forms: meConfig.forms,
    hasAlternativeMethod: false,
    validationRules: meConfig.validationRules,
    alternativeValidationRules: meConfig.alternativeValidationRules,
    creditRate: meConfig.creditRate,
    creditType: meConfig.creditType,
    formReference: meConfig.formReference,
    notes: meConfig.notes,
  },
  VT: {
    code: 'VT',
    name: 'Vermont',
    formName: 'Form BI-471',
    forms: vtConfig.forms,
    hasAlternativeMethod: false,
    validationRules: vtConfig.validationRules,
    alternativeValidationRules: vtConfig.alternativeValidationRules,
    creditRate: vtConfig.creditRate,
    creditType: vtConfig.creditType,
    formReference: vtConfig.formReference,
    notes: vtConfig.notes,
  },
  RI: {
    code: 'RI',
    name: 'Rhode Island',
    formName: 'Form RI-1120C',
    forms: riConfig.forms,
    hasAlternativeMethod: false,
    validationRules: riConfig.validationRules,
    alternativeValidationRules: riConfig.alternativeValidationRules,
    creditRate: riConfig.creditRate,
    creditType: riConfig.creditType,
    formReference: riConfig.formReference,
    notes: riConfig.notes,
  },
  DE: {
    code: 'DE',
    name: 'Delaware',
    formName: 'Form 1100',
    forms: deConfig.forms,
    hasAlternativeMethod: false,
    validationRules: deConfig.validationRules,
    alternativeValidationRules: deConfig.alternativeValidationRules,
    creditRate: deConfig.creditRate,
    creditType: deConfig.creditType,
    formReference: deConfig.formReference,
    notes: deConfig.notes,
  },
  HI: {
    code: 'HI',
    name: 'Hawaii',
    formName: 'Form N-30',
    forms: hiConfig.forms,
    hasAlternativeMethod: false,
    validationRules: hiConfig.validationRules,
    alternativeValidationRules: hiConfig.alternativeValidationRules,
    creditRate: hiConfig.creditRate,
    creditType: hiConfig.creditType,
    formReference: hiConfig.formReference,
    notes: hiConfig.notes,
  },
  NV: {
    code: 'NV',
    name: 'Nevada',
    formName: 'Form NV-200',
    forms: nvConfig.forms,
    hasAlternativeMethod: false,
    validationRules: nvConfig.validationRules,
    alternativeValidationRules: nvConfig.alternativeValidationRules,
    creditRate: nvConfig.creditRate,
    creditType: nvConfig.creditType,
    formReference: nvConfig.formReference,
    notes: nvConfig.notes,
  },
  NH: {
    code: 'NH',
    name: 'New Hampshire',
    formName: 'Form BT-REV',
    forms: nhConfig.forms,
    hasAlternativeMethod: false,
    validationRules: nhConfig.validationRules,
    alternativeValidationRules: nhConfig.alternativeValidationRules,
    creditRate: nhConfig.creditRate,
    creditType: nhConfig.creditType,
    formReference: nhConfig.formReference,
    notes: nhConfig.notes,
  },
};

export function getAvailableStates(): StateConfig[] {
  return Object.values(STATE_CONFIGS).sort((a, b) => a.name.localeCompare(b.name));
}

export function getStateConfig(stateCode: string): StateConfig | undefined {
  return STATE_CONFIGS[stateCode];
} 